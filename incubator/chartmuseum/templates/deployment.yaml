apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      name: {{ include "common.fullname" . }}
      labels:
        app: {{ template "common.name" . }}
        release: {{ .Release.Name | quote }}
      {{- if eq .Values.storage "amazon" }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/amazon-secret.yaml") . | sha256sum }}
      {{- end }}
    spec:
      {{- if eq .Values.storage "local" }}
      volumes:
      - name: storage-volume
        emptyDir: {}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: STORAGE
          value: {{ required "You must provide the storage provider you which to use." .Values.storage }}
        {{- if eq .Values.storage "local" }}
        - name: STORAGE_LOCAL_ROOTDIR
          value: /storage
        {{- end }}
        {{- if eq .Values.storage "amazon" }}
        - name: STORAGE_AMAZON_BUCKET
          value: {{ required "You must provide a S3 Bucket to use." .Values.amazon.bucket }}
        - name: STORAGE_AMAZON_REGION
          value: {{ required "You must set the region where your S3 Bucket is being hosted." .Values.amazon.region }}
        {{- if .Values.amazon.prefix }}
        - name: STORAGE_AMAZON_PREFIX
          value: {{ .Values.amazon.prefix }}
        {{- end }}
        {{- if .Values.amazon.endpoint }}
        - name: STORAGE_AMAZON_ENDPOINT
          value: {{ .Values.amazon.endpoint }}
        {{- end }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "common.fullname" . }}-amazon
              key: access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "common.fullname" . }}-amazon
              key: secret_key
        {{- end }}
        - name: PORT
          value: "{{ .Values.service.internalPort }}"
        - name: DEBUG
          value: "true"
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /index.yaml
            port: {{ .Values.service.internalPort }}
        readinessProbe:
          httpGet:
            path: /index.yaml
            port: {{ .Values.service.internalPort }}
        {{- if eq .Values.storage "local" }}
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
